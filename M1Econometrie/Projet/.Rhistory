as.list(as.data.frame(cbind(cMoyenne,cEcartType)))
??read.table
help("read.table")
help("scan")
cancerprostate
mtcars
cancerprostate <- read.csv("D:/ETUDES/M1 MAS/R/TD3 - Importation/donnees/cancerprostate.txt", sep=";")
View(cancerprostate)
help("read.table")
View(cancerprostate)
cancerprostate <- read.table("cancerprostate.txt", header=T,sep=";")
cancerprostate <- read.table("donnees/cancerprostate.txt", header=T,sep=";")
View(cancerprostate)
summary(cancerprostate)
View(cancerprostate)
str(cancerprostate)
str(cancerprostate)
cancerprostate <- read.table("donnees/cancerprostate.txt", header=T,sep=";",
colClasses = c("int","num","factor","factor","factor","factor","num"))
cancerprostate <- read.table("donnees/cancerprostate.txt", header=T,sep=";",
colClasses = c(int,"num","factor","factor","factor","factor","num"))
cancerprostate <- read.table("donnees/cancerprostate.txt", header=T,sep=";",
colClasses = c("integer","numeric","factor","factor","factor","factor","numeric"))
str(cancerprostate)
library(readr)
test1 <- read_csv("D:/ETUDES/M1 MAS/R/TD3 - Importation/donnees/test1.csv")
View(test1)
test1 <- read.table("donnees/test1.csv", header=T, sep=",")
View(test1)
names(test1)
test2 <- read.table("donnees/test2.csv", header=T, sep=",")
View(test2)
is.na.data.frame(test2)
s
Impotez le jeu de données __test1__.
```{r}
test1 <- read.table("donnees/test1.csv", header=T, sep=",")
names(test1)
```
Les deux dernières colonnes n'avaient pas de libellés, remplacés par "X" et "X.1". <br>
Importez le jeu de données __test2__. Y a-t-il de données manquantes ? Si oui, combien ?
```{r}
test2 <- read.table("donnees/test2.csv", header=T, sep=",")
sum(is.na(test2))
```
test2 <- na.omit(test2)
```{r}
test2 <- read.table("donnees/test2.csv", header=T, sep=",")
sum(is.na(test2))
etat1 <- read.table("donnees/etat1.csv", header = T, sep = ";")
etat2 <- read.table("donnees/etat2.csv", header = T, sep = ";")
dim(etat1)
c(dim(etat1), dim(etat2))
cbind(etat1, etat2)
etat2 <- read.table("donnees/etat2.csv", header = T, sep = ",")
c(dim(etat1), dim(etat2))
cbind(etat1, etat2)
cbind(etat1, etat2, level = 1)
cbind(etat1, etat2, level = 8)
merge(test1, test2)
merge(test1, test2, by = "etat")
merge(etat1, etat2)
merge(etat1, etat2, by = "etat")
merge(etat1, etat2) #  ,by = "etat"
etat2$etat
etat2$etat[1]
etat2$etat[0]
etat2$etat[1] <- France
etat2$etat[1] <- "France"
etat2$etat[1] <- NA
merge(etat1, etat2)
etat <- merge(etat1, etat2) #  ,by = "etat"
data("mtcars")
mtcars
is.matrix(mtcars)
is.list(mtcars)
is.data.frame(mtcars)
dim(mtcars)
paste(ncol(mtcars), 'variables', sep = " ")
names(mtcars)
help(mtcars) # Voir dans la fenêtre d'aide
summary(mtcars)
apply(mtcars, 2, mode)
x <- mtcars[,1]
x <- mtcars$mpg
x
x[c(15, 3, 4)]
head(x, n=10)
rev(x[1:10])
tail(x, n=10)
mtcars$am <- as.factor(mtcars$am)
summary(mtcars)
y <- mtcars$am
m <- cbind(x, y)
class(m)
dim(m)
m[12,]
m[1:8,]
m[,2]
m[,1][m[,2]==2]
cMoyenne <- by(m[,1], m[,2], mean)
aggregate(m[,1], list(m[,2]), mean)
c(mean(subset(m[,1], m[,2]==1)), mean(subset(m[,1], m[,2]==2)))
cEcartType <- by(m[,1], m[,2], sd)
as.list(as.data.frame(cbind(cMoyenne,cEcartType)))
cancerprostate <- read.table("donnees/cancerprostate.txt", header=T,sep=";")
str(cancerprostate)
cancerprostate <- read.table("donnees/cancerprostate.txt", header=T, sep=";",
colClasses = c("integer","numeric","factor","factor","factor","factor","numeric"))
str(cancerprostate)
test1 <- read.table("donnees/test1.csv", header=T, sep=",")
names(test1)
test2 <- read.table("donnees/test2.csv", header=T, sep=",")
sum(is.na(test2))
test2 <- na.omit(test2)
etat1 <- read.table("donnees/etat1.csv", header = T, sep = ";")
etat2 <- read.table("donnees/etat2.csv", header = T, sep = ",")
c(dim(etat1), dim(etat2))
cbind(etat1, etat2)
etat <- merge(etat1, etat2) #  ,by = "etat"
etat2$etat[1] <- NA # Alabama
merge(etat1, etat2)
cut()
cut(etat$Income)
cut(etat$Income, breaks = c(4000, 5000))
cut(etat$Income, breaks = c(4000, 5000), include.lowest = T)
cut(etat$Income, breaks = c(0, 4000, 5000), include.highest = T)
cut(etat$Income, breaks = c(0, 4000, 5000), include.lowest = T)
max(etat$Income)
5000
cut(etat$Income, breaks = c(0, 4000, 5000, Inf), include.lowest = T)
cut(etat$Income, breaks = c(0, 4000, 5000, Inf), include.lowest = T, labels = c("Pauvre", "Aisé", "Riche"))
sum(is.na(Richesse))
Richesse <- cut(etat$Income, breaks = c(0, 4000, 5000, Inf),
include.lowest = T, labels = c("Pauvre", "Aisé", "Riche"))
sum(is.na(Richesse))
quantile(etat$Income)
cut(etat$Income, breaks = quantile(etat$Income), include.lowest = T)
is.na(cut(etat$Income, breaks = quantile(etat$Income), include.lowest = T))
sum(is.na(cut(etat$Income, breaks = quantile(etat$Income), include.lowest = T)))
quantile(etat$Income)
quantile(etat$Income, probs=c(0:5/5))
cut(etat$Income, breaks = quantile(etat$Income, probs=c(0:5/5)), include.lowest = T)
cut(etat$Income, breaks = quantile(etat$Income, probs=c(0:5/5)), include.lowest = T, labels = c("R1", "R2", "R3", "R4", "R5"))
data("mtcars")
mtcars
is.matrix(mtcars)
is.list(mtcars)
is.data.frame(mtcars)
dim(mtcars)
paste(ncol(mtcars), 'variables', sep = " ")
names(mtcars)
help(mtcars) # Voir dans la fenêtre d'aide
summary(mtcars)
apply(mtcars, 2, mode)
x <- mtcars[,1]
x <- mtcars$mpg
x
x[c(15, 3, 4)]
head(x, n=10)
rev(x[1:10])
tail(x, n=10)
mtcars$am <- as.factor(mtcars$am)
summary(mtcars)
y <- mtcars$am
m <- cbind(x, y)
class(m)
dim(m)
m[12,]
m[1:8,]
m[,2]
m[,1][m[,2]==2]
cMoyenne <- by(m[,1], m[,2], mean)
aggregate(m[,1], list(m[,2]), mean)
c(mean(subset(m[,1], m[,2]==1)), mean(subset(m[,1], m[,2]==2)))
cEcartType <- by(m[,1], m[,2], sd)
as.list(as.data.frame(cbind(cMoyenne,cEcartType)))
cancerprostate <- read.table("donnees/cancerprostate.txt", header=T,sep=";")
str(cancerprostate)
cancerprostate <- read.table("donnees/cancerprostate.txt", header=T, sep=";",
colClasses = c("integer","numeric","factor","factor","factor","factor","numeric"))
str(cancerprostate)
test1 <- read.table("donnees/test1.csv", header=T, sep=",")
names(test1)
test2 <- read.table("donnees/test2.csv", header=T, sep=",")
sum(is.na(test2))
test2 <- na.omit(test2)
etat1 <- read.table("donnees/etat1.csv", header = T, sep = ";")
etat2 <- read.table("donnees/etat2.csv", header = T, sep = ",")
c(dim(etat1), dim(etat2))
cbind(etat1, etat2)
etat <- merge(etat1, etat2) #  ,by = "etat"
etat2$etat[1] <- NA # Alabama
merge(etat1, etat2)
Richesse <- cut(etat$Income, breaks = c(0, 4000, 5000, Inf),
include.lowest = T, labels = c("Pauvre", "Aisé", "Riche"))
sum(is.na(Richesse))
cut(etat$Income, breaks = quantile(etat$Income, probs=c(0:5/5)), include.lowest = T, labels = c("R1", "R2", "R3", "R4", "R5"))
labels(etat$Income)
View(etat)
etat$income <- cut(etat$Income, breaks = quantile(etat$Income, probs=c(0:5/5)),
include.lowest = T, labels = c("R1", "R2", "R3", "R4", "R5"))
labels(etat$Income)
etat$income <- cut(etat$Income, breaks = quantile(etat$Income, probs=c(0:5/5)),
include.lowest = T, labels = c("R1", "R2", "R3", "R4", "R5"))
labels(etat$Income)
labels(etat$income)
str(etat$income)
labels(etat$income)
label(etat$income)
levels(etat$income)
levels(etat$income) <- c("R1", "R1", "R3", "R3", "R5")
bladder <- read.delim("D:/ETUDES/M1 MAS/R/TD3 - Importation/donnees/bladder.txt", header=FALSE, stringsAsFactors=FALSE)
View(bladder)
is.na(bladder)
sum(is.na(bladder))
bladder <- read.table("donnees/bladder.txt", header=F, sep = " ")
View(bladder)
bladder <- read.table("donnees/bladder.txt", header=F, sep = "    ")
bladder <- read.table("donnees/bladder.txt", header=F, sep = "\t")
View(bladder)
str(bladder)
bladder <- read.table("donnees/bladder.txt", header=F, sep = "\t")
sum(is.na(bladder))
bladder[,1]
bladder[,1:5]
bladder[,1:3]
summary(bladder[,1:3])
boxplot(bladder[,1:3])
plot(bladder[,1:3])
boxplot(bladder[,1])
summary(bladder[,1:3])
boxplot(bladder[,1:3])
bladder <- read.table("donnees/bladder.txt", header = F, sep = "\t", na.strings = -500)
View(bladder)
lapply(bladder, 2, FUN=function(x){replace(x, is.na(x), mean(x, na.rm=TRUE))})
lapply(bladder, 2, FUN=function(x){replace(x, is.na(x), mean(x, na.rm=TRUE))}))
apply(bladder, 2, FUN=function(x){replace(x, is.na(x), mean(x, na.rm=TRUE))})
Population <- read_csv("C:/Users/SIGMA/Desktop/data/Population.csv",
skip = 3)
View(Population)
Population <- read.csv("C:/Users/SIGMA/Desktop/data/Population.csv", skip = 3)
View(Population)
Population$Country.Name == "Bénin"
Population[Population$Country.Name=="Bénin"]
Population[Population$Country.Name=="Belgique"]
Population$Country.Name
Population <- read.csv("C:/Users/SIGMA/Desktop/data/Population.csv", skip = 3, encoding = "utf-8")
View(Population)
library(readr)
Population <- read_csv("C:/Users/SIGMA/Desktop/data/Population.csv",
skip = 3)
View(Population)
P <- read.table("C:\Users\SIGMA\Desktop\data\Population.csv", skip=3)
P <- read.table("C:/Users/SIGMA/Desktop/data/Population.csv", skip=3)
P <- read.table("C:/Users/SIGMA/Desktop/data/Population.csv", skip=3, header = T, sep = ";")
View(P)
P <- read.table("C:/Users/SIGMA/Desktop/data/Population.csv", skip=3, header = T, sep = ",")
install.packages("reshape")
install.packages("htmltools")
x <- matrix(c(c(-4.9, -3.46, 1.41), c(-2.45, 0, -1.41), c(-2.45, 3.46, -1.41), c(2.45, 3.46, 1.41), c(2.45, 0, 1.41), c(4.9, -3.46, -1.41)))
x
x <- matrix(c(c(-4.9, -3.46, 1.41), c(-2.45, 0, -1.41), c(-2.45, 3.46, -1.41), c(2.45, 3.46, 1.41), c(2.45, 0, 1.41), c(4.9, -3.46, -1.41)), ncol=3, nrow = 6)
x
y <- matrix(c(0.82, 0.58, 0, -0.41, 0.58, 0.71, -0.41, 0.58, 0.71), ncol = 3, nrow = 3)
y
y.t
transpose(y)
t`
y
t(x)
t(y)
y <- t(y)
solve(y)
det(y)
yI %*% y
x %*% y
y^-1
curve(dt(x, 30), from = -5, to = 5, col = "orange",
xlab = "quantile", ylab = "density", lwd = 2)
u <- seq(-10, 10, by = .1)
v <- dnorm(x, mean = 0, sd = 1)
lines(u,v)
v
u
lines(x,v)
lines(v)
u <- seq(-4, 4, by = .1)
v <- dnorm(x, mean = 0, sd = 1)
lines(u,v)
line(u,v)
curve(dnorm(u, mean = 0, sd = 1), from = -5, to = 5)
curve(dnorm(x))
curve(dt(u, 30), from = -5, to = 5, col = "orange",
xlab = "quantile", ylab = "density", lwd = 2)
curve(dnorm(x), from = -5, to = 5, col = "orange",
xlab = "quantile", ylab = "density", lwd = 2)
curve(dt(u, 30), from = -5, to = 5, col = "blue",
xlab = "quantile", ylab = "density", lwd = 2)
curve(dt(x, 30), from = -5, to = 5, col = "blue",
xlab = "quantile", ylab = "density", lwd = 2)
source('D:/ETUDES/M1 MAS/M1R/CC/RakotosonLoic.R', encoding = 'UTF-8')
source('D:/ETUDES/M1 MAS/M1R/CC/RakotosonLoic.R', encoding = 'UTF-8')
getwd()
UE_richesse_nationale <- read.csv2("D:/ETUDES/M1 MAS/M1Econometrie/UE_richesse_nationale.csv", row.names=1)
View(UE_richesse_nationale)
summary(UE_richesse_nationale)
mod1 <- lm(Satisfaction~., data=UE_richesse_nationale)
summary(mod1)
abline(mod1)
plot(mod1)
plot(mod1)
lnUE <- log(UE_richesse_nationale)
plot(Satisfaction~CO2_personne, data = lnUE)
mod2 <- lm(Satisfaction~., data = lnUE)
summary(mod2)
DP_chomage <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_chomage.csv", encoding="UTF-8", stringsAsFactors=FALSE)
View(DP_chomage)
chomage <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_chomage.csv", encoding="UTF-8")
chomage <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_chomage.csv", encoding="UTF-8")
chomage[2,]
chomage[,c(1)]
chomage[,c(1,6)]
chomage[,c(1,7)]
chomage[,c("LOCATION", "chomage") = c(1,7)]
chomage <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_chomage.csv", encoding="UTF-8")[,c(1,7)]
View(chomage)
conso <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_conso.csv", encoding="UTF-8")[,c(1,7)]
names(conso) <- c("PAYS", "conso")
View(conso)
emploi <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_emploi.csv", encoding="UTF-8")[,c(1,7)]
names(emploi) <- c("PAYS", "emploi")
View(emploi)
chomage <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_chomage.csv", encoding="UTF-8")[,c(1,7)]
names(chomage) <- c("PAYS", "chomage")
conso <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_conso.csv", encoding="UTF-8")[,c(1,7)]
names(conso) <- c("PAYS", "conso")
emploi <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_emploi.csv", encoding="UTF-8")[,c(1,7)]
names(emploi) <- c("PAYS", "emploi")
epargne <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_epargne_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(epargne) <- c("PAYS", "epargne")
impot <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_impot_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(impot) <- c("PAYS", "impot")
inflation <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_infation_IPC.csv", encoding="UTF-8")[,c(1,7)]
names(inflation) <- c("PAYS", "inflation")
pib <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(pib) <- c("PAYS", "PIB")
revenu <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(revenu) <- c("PAYS", "revenu")
View(impot)
IE <- cbind(epargne, impot, by = "PAYS")
View(IE)
IE <- merge(epargne, impot, by = "PAYS")
View(IE)
IE <- merge(epargne, impot, chomage, conso, by = "PAYS")
t <- Reduce(function(x, y) merge(x, y, all=TRUE), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
source('~/.active-rstudio-document')
View(t)
k <- Reduce(function(x, y) merge(x, y), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
View(k)
m1 <- lm(conso~., data = k)
summary(m1)
k[,2:9]
m1 <- lm(conso~., data = k[2:9])
summary(m1)
plot(m1)
m2 <- lm(conso~epargne+inflation, data = k)
summary(m2)
plot(m2)
plot(conso~revenu, data = k)
m2 <- lm(conso~epargne+inflation+revenu, data = k)
summary(m2)
plot(m2)
m3 <- lm(conso~revenu, data=k)
summary(m3)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
m1t <- lm(conso~., data = t[2:9])
summary(m1t)
m2t <- lm(conso~epargne+inflation+revenu, data = t)
summary(m2t)
m3t <- lm(conso~revenu, data=t)
summary(m3t)
m2bist <- lm(conso~inflation+revenu, data = t)
summary(m2bist)
Reduce(merge(x, y), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
chomage <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_chomage.csv", encoding="UTF-8")[,c(1,7)]
names(chomage) <- c("PAYS", "chomage")
conso <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_conso.csv", encoding="UTF-8")[,c(1,7)]
names(conso) <- c("PAYS", "conso")
emploi <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_emploi.csv", encoding="UTF-8")[,c(1,7)]
names(emploi) <- c("PAYS", "emploi")
epargne <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_epargne_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(epargne) <- c("PAYS", "epargne")
impot <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_impot_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(impot) <- c("PAYS", "impot")
inflation <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_inflation_IPC.csv", encoding="UTF-8")[,c(1,7)]
names(inflation) <- c("PAYS", "inflation")
pib <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(pib) <- c("PAYS", "PIB")
revenu <- read.csv("D:/ETUDES/M1 MAS/M1Econometrie/DP_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(revenu) <- c("PAYS", "revenu")
t <- Reduce(function(x, y) merge(x, y, all=TRUE), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
getwd()
setwd("D:/ETUDES/M1 MAS/M1R/M1Econometrie/Projet")
chomage <- read.csv("DP_chomage.csv", encoding="UTF-8")[,c(1,7)]
names(chomage) <- c("PAYS", "chomage")
conso <- read.csv("DP_conso.csv", encoding="UTF-8")[,c(1,7)]
names(conso) <- c("PAYS", "conso")
emploi <- read.csv("DP_emploi.csv", encoding="UTF-8")[,c(1,7)]
names(emploi) <- c("PAYS", "emploi")
epargne <- read.csv("DP_epargne_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(epargne) <- c("PAYS", "epargne")
impot <- read.csv("DP_impot_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(impot) <- c("PAYS", "impot")
inflation <- read.csv("DDP_inflation_IPC.csv", encoding="UTF-8")[,c(1,7)]
names(inflation) <- c("PAYS", "inflation")
pib <- read.csv("DP_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(pib) <- c("PAYS", "PIB")
revenu <- read.csv("DP_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(revenu) <- c("PAYS", "revenu")
t <- Reduce(function(x, y) merge(x, y, all=TRUE), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
chomage <- read.csv("DP_chomage.csv", encoding="UTF-8")[,c(1,7)]
names(chomage) <- c("PAYS", "chomage")
conso <- read.csv("DP_conso.csv", encoding="UTF-8")[,c(1,7)]
names(conso) <- c("PAYS", "conso")
emploi <- read.csv("DP_emploi.csv", encoding="UTF-8")[,c(1,7)]
names(emploi) <- c("PAYS", "emploi")
epargne <- read.csv("DP_epargne_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(epargne) <- c("PAYS", "epargne")
impot <- read.csv("DP_impot_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(impot) <- c("PAYS", "impot")
inflation <- read.csv("DP_inflation_IPC.csv", encoding="UTF-8")[,c(1,7)]
names(inflation) <- c("PAYS", "inflation")
pib <- read.csv("DP_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(pib) <- c("PAYS", "PIB")
revenu <- read.csv("DP_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(revenu) <- c("PAYS", "revenu")
t <- Reduce(function(x, y) merge(x, y, all=TRUE), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
View(t)
source('~/.active-rstudio-document', echo=TRUE)
epargne <- read.csv("DP_epargne_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(epargne) <- c("PAYS", "epargne")
t <- Reduce(function(x, y) merge(x, y, all=TRUE), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
View(t)
chomage <- read.csv("DP_chomage.csv", encoding="UTF-8")[,c(1,7)]
names(chomage) <- c("PAYS", "chomage")
conso <- read.csv("DP_conso.csv", encoding="UTF-8")[,c(1,7)]
names(conso) <- c("PAYS", "conso")
emploi <- read.csv("DP_emploi.csv", encoding="UTF-8")[,c(1,7)]
names(emploi) <- c("PAYS", "emploi")
epargne <- read.csv("DP_epargne_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(epargne) <- c("PAYS", "epargne")
impot <- read.csv("DP_impot_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(impot) <- c("PAYS", "impot")
inflation <- read.csv("DP_inflation_IPC.csv", encoding="UTF-8")[,c(1,7)]
names(inflation) <- c("PAYS", "inflation")
pib <- read.csv("DP_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(pib) <- c("PAYS", "PIB")
revenu <- read.csv("DP_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(revenu) <- c("PAYS", "revenu")
t <- Reduce(function(x, y) merge(x, y, all=TRUE), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
View(t)
chomage <- read.csv("DP_chomage.csv", encoding="UTF-8")[,c(1,7)]
names(chomage) <- c("PAYS", "chomage")
conso <- read.csv("DP_conso.csv", encoding="UTF-8")[,c(1,7)]
names(conso) <- c("PAYS", "conso")
emploi <- read.csv("DP_emploi.csv", encoding="UTF-8")[,c(1,7)]
names(emploi) <- c("PAYS", "emploi")
epargne <- read.csv("DP_epargne_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(epargne) <- c("PAYS", "epargne")
impot <- read.csv("DP_impot_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(impot) <- c("PAYS", "impot")
inflation <- read.csv("DP_inflation_IPC.csv", encoding="UTF-8")[,c(1,7)]
names(inflation) <- c("PAYS", "inflation")
pib <- read.csv("DP_PIB.csv", encoding="UTF-8")[,c(1,7)]
names(pib) <- c("PAYS", "PIB")
revenu <- read.csv("DP_revenu.csv", encoding="UTF-8")[,c(1,7)]
names(revenu) <- c("PAYS", "revenu")
t <- Reduce(function(x, y) merge(x, y, all=TRUE), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
k <- Reduce(merge(x, y), list(chomage, conso, emploi, epargne, impot, inflation, pib, revenu))
m1 <- lm(conso~., data = k[2:9])
summary(m1)
m2 <- lm(conso~epargne+inflation+revenu, data = k)
summary(m2)
m3 <- lm(conso~revenu, data=k)
summary(m3)
######################################
m1t <- lm(conso~., data = t[2:9])
summary(m1t)
m2t <- lm(conso~epargne+inflation+revenu, data = t)
summary(m2t)
m2bist <- lm(conso~inflation+revenu, data = t)
summary(m2bist)
m3t <- lm(conso~revenu, data=t)
summary(m3t)
source('~/.active-rstudio-document', echo=TRUE)
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
View(DP_chomage.csv)
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i])[c(1,7)])
View(DP_chomage.csv)
t <- read.csv("DP_chomage.csv", col.names = c("PAYS", "CHOM"))[c(1,7)]
View(DP_chomage.csv)
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i], colClasses = c("*" = NULL, y = "Value"))[c(1,7)])
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i], colClasses = c("factor", rep(NULL,5), "double", NULL)))
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i], colClasses = c("factor", rep(NULL,4), "double", NULL)))
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i], colClasses = c(rep(NULL,8))))
install.packages("glmulti")
